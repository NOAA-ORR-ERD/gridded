name: Run tests with miniconda
on: [push]

jobs:
  test:
    name: Miniconda ${{ matrix.os }} Py${{ matrix.pyver }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["ubuntu-latest", "windows-latest"]
            pyver: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
#          environment-file: environment.yml
          python-version: ${{ matrix.pyver }}
          auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda config --add channels conda-forge
#          conda info
#          conda list
      - name: Run pytest
        shell: bash -l {0}
        run: |
            conda install --file conda_requirements.txt --file conda_requirements_test.txt
            pip install -e .
            pytest --pyargs gridded

  lint:
    name: Flake8 linting
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lint
          python-version: 3.9
          auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda config --add channels conda-forge
      - name: Lint
        shell: bash -l {0}
        run: |
            conda install flake8
            python -m flake8 --count --max-line-length=95 --show-source --statistics gridded/
      # python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #       python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
